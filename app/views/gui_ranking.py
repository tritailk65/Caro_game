
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Frame, messagebox, ttk
import tkinter.font as tkFont 
import views.gui_gamemode
import socket
import requests


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"..\assets")

hostname = socket.gethostname()
IPAddr = socket.gethostbyname(hostname)

url = f'http://{IPAddr}:8000/api/players'

def fetch_data():
    try:
        response = requests.get(url)
        response.raise_for_status()  # Kiểm tra lỗi HTTP

        # Lấy dữ liệu JSON
        data = response.json()
        return data

    except requests.RequestException as e:
        messagebox.showerror("Lỗi", f"Không thể lấy dữ liệu: {e}")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class Ranking(Frame):
    def __init__(self,parent,controller):
        Frame.__init__(self, parent)

        # region GUI
        canvas = Canvas(
            self,
            bg = "#1B2837",
            height = 700,
            width = 1300,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            1040.0,
            0.0,
            1300.0,
            700.0,
            fill="#101B27",
            outline="")

        canvas.create_rectangle(
            37.0,
            92.0,
            1003.0,
            658.0,
            fill="#213040",
            outline="")

        canvas.create_text(
            120.11376953125,
            35.224853515625,
            anchor="nw",
            text="Bảng xếp hạng",
            fill="#FFFFFF",
            font=("DMSans Medium", 20 * -1)
        )

        # Back btn
        self.button_image_1 = PhotoImage(
            file=relative_to_assets("back_btn.png"))
        button_1 = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: controller.show_frame(views.gui_gamemode.GameMode),
            relief="flat"
        )
        button_1.place(
            x=19.0,
            y=19.0,
            width=48.0,
            height=42.0
        )

        canvas.create_rectangle(
            1123.0,
            27.0,
            1217.0,
            61.0,
            fill="#101B27",
            outline="")
        # endregion
        
        data = fetch_data()
        sorted_data = sorted(data, key=lambda x : x["score"], reverse=True)
        top_10 = sorted_data[:10]

        heading_font = tkFont.Font(family="Helvetica", size=14, weight="bold")
        body_font = tkFont.Font(family="Helvetica", size=10)

        # Đặt kiểu chữ cho tiêu đề của Treeview thông qua ttk.Style
        style = ttk.Style()
        style.configure("Treeview.Heading", font=heading_font)
        style.configure("Treeview", font = body_font,rowheight=50)

        tree = ttk.Treeview(self,columns=("Rank", "Tên trong game", "Thắng/Thua/Hòa", "Điểm"))

        tree.heading("#0", text="Rank")
        tree.heading("#1", text="Tên trong game")
        tree.heading("#2", text="Thắng/Thua/Hòa")
        tree.heading("#3", text="Điểm")

        tree.column("#0", width=100)
        tree.column("#1", width=260)
        tree.column("#2", width=260)
        tree.column("#3", width=100)
        
        i = 0
        for item in top_10:
            tree.insert("", "end", text=str(i+1),
                        values=(item['ingame_name'], str(item['game_win']) + "/" + str(item["game_lose"]) + "/" + str(item["game_draw"]), item['score']))
            i+=1
        tree.place(x=70,y=117)

